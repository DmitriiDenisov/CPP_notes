//Программа удаляет из массива все элементы,значения которых заканчиваются на цифру 3 или 5(исключая
//элементы из массива,все следующие за ним элементы сдвигаются влево на 1 позицию,и при этом освободившийся
//элемент массива зануляется.Заполнение:так как в задаче не было сказано про размер и способ заполнения массива,
//то автор выбрал массив из 30 элементов и случайное заполнение элементов целыми числами из отрезка [1;50]
//В программе реализована одна пользовательская функция,удаляющая "неподходящие" элементы и возвращающая
//количество удаленных элементов.В результате,программа выводит элементы в две строчки(1 строка-15 элементов,2-ая - оставшиеся(под каждое значение отводится 3 позиции))
//Третьей строчкой программа выводит колчество удаленных элементов.Все результаты выводится в функции main//
// Среда разработки: Microsoft Visual C++ 2012 Express			//
// Версия программы: 1.00  |  Автор: Денисов Д.М.,ПМИ,172			//
// Дата последнего изменения: 14.12.2013 		
#include "stdafx.h"
#include <ctime>
#include <cstdlib>
#include <iomanip>
#include <iostream>
using namespace std;

int ydalenie(int *arr,const int n)//пользовательская функция,удаляющая ненужные элементы.Возвращает количество удаленных элементов
{
	int num = 0;//переменная отвечающая за количество удаленных чисел
	int i = 0;
	bool flag;//булева переменная,фиксирует,выполнялось ли условие оканчивания на 3 или 5

	while (i < n)//будем идти по каждому i-му элементу и проверять,оканчивается ли он на 3 или 5
	{
		flag = true;
		if ((arr[i] % 10 == 5)||(arr[i] % 10 == 3))//если оканчивается на 3 или 5
		{
			flag = false;//переменная фиксирует заход в цикл for=>мы поймем, что это число было удалено
			for (int j = i ; j < n - 1 ; j++)
				arr[j] = arr[j + 1];//сдвиг влево
		}
		if (flag == false)//если захода не было(flag == true),то рассматриваем следующее число,то есть увеличиваем i на 1	
		{
			arr[n - 1 - num] = 0;//зануляем "освободившуюся" в следствие сдвига ячейку
			num++;//+1 к колчесву удаленных элементов :)
		}
		else
			i++;//Важный переход:если число удалилось=>сдигаем влево и число,которое мы ещё не рассматривали
		//теперь стоит на этом же место=>i не меняем. В случае же,если число не удалили=>i увеличиваем на 1
		//то есть рассматриваем уже следующее число
	}
	return num;

}

int _tmain(int argc, _TCHAR* argv[])
{
	const int N = 30;//размерность массива
	int arr[N];//массив

	setlocale(LC_ALL, "Rus");
	srand(time(NULL));

	for (int i = 0 ; i < N ; i++)//случайное заполнение массива
		arr[i]=rand()%49+1;

	//cout<<"Generated numbers:";//для удобства можете включить вывод сгенерированных элементов,чтобы убедиться в верности вычислений

	//for (int i = 0 ; i < N ; i++)
	//cout<<i<<"-th number: "<<arr[i]<<endl;

	int kolic = ydalenie(arr,N);//присваиваем переменной kolic число удаленных чисел.Это число возвращает функция ydalenie,одновременно с этим функция удаляет ненужные элементы

	cout<<"Элементы (часть#1):";

	for (int i = 0 ; i <= 13; i++)
		if (arr[i]!=0)
			cout<<setw(3)<<arr[i];//на каждый элемент отводится три позиции
	cout<<endl<<"Элементы (часть#2):";
	for (int i = 14 ; i < N; i++)
		if (arr[i]!=0)//выводим без нулей
			cout<<setw(3)<<arr[i];//3 позиции на каждый элемент
	cout<<endl<<"Число удаленных из массива элементов="<<kolic<<endl;

	return 0;
}

